# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export DISABLE_AUTO_UPDATE=true

# Path to your oh-my-zsh installation.
export ZSH="/home/icholy/.oh-my-zsh"

# Set name of the theme to load.
ZSH_THEME="robbyrussell"

# oh-my-zsh plugins.
plugins=(gitfast)

source $ZSH/oh-my-zsh.sh

# User configuration
export EDITOR=nvim

# Add ~/bin to PATH
export PATH=$PATH:/home/icholy/bin

# Add Go bins to PATH
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$(go env GOPATH)/bin

# Add swift to PATH
export PATH=$PATH:/usr/local/swift/swift-5.5.2-RELEASE-ubuntu20.04/usr/bin

# Add lua-language-server
export PATH=$PATH:/usr/local/lua-language-server/bin

# Add pyenv to PATH
export PATH=$PATH:$HOME/.pyenv/bin

# Node Version Manager
export NVM_DIR="$HOME/.nvm"
export PATH=$PATH:"$NVM_DIR/versions/node/$(cat $NVM_DIR/alias/default)/bin"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use

# Disable Husky Hooks
export HUSKY=0

# Use ripgrep config
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

alias clip="xclip -i -selection clipboard"
alias n='nautilus'
alias sagi='sudo apt install'
alias t='talos -p ilia.choly -e default -b open -q -F'
alias fd='fdfind'
alias vim='nvim'
alias semgrepvim="jq -r '.results[] | [ .path, .start.line, .start.col ] | join(\":\")' > /tmp/errorfile; nvim -q /tmp/errorfile"

function vg() {
    rg --vimgrep $@ > /tmp/vgfile
    nvim -q /tmp/vgfile
}

function cz() {
    local REPO_DIR=$(find ~/src -maxdepth 4 -type d -name ".git" | xargs dirname | fzf)
    if [ -n "$REPO_DIR" ]; then
        cd "$REPO_DIR"
    fi
}

function czz() {
    local REPO_DIR="/home/icholy/src/github.com/compassdigital/cdl"
    local SUB_DIR=$(git --git-dir $REPO_DIR/.git ls-files | grep "package\.json$\|go\.mod$" | xargs dirname | fzf)
    if [ -n "$SUB_DIR" ]; then
        cd "$REPO_DIR/$SUB_DIR"
    fi
}

function czp() {
    local REPO_DIR="/home/icholy/src/github.com/compassdigital/cdl"
    local SUB_DIR=$(p4 list --dir $REPO_DIR | jq -r '.dir' | fzf)
    if [ -n "$SUB_DIR" ]; then
        cd "$REPO_DIR/$SUB_DIR"
    fi
}

function bump() {
    local INC_VERSION="${1:-minor}"
    echo "npm version --no-git-tag-version $INC_VERSION";
    local TAG_NAME="$(npm version --no-git-tag-version $INC_VERSION)"
    echo "git commit -am \"chore: version $TAG_NAME\""
    git commit -am "chore: version $TAG_NAME"
    echo "git tag $TAG_NAME"
    git tag "$TAG_NAME";
}

source /home/icholy/.secrets
